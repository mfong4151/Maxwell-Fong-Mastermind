// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int          @id @default(autoincrement())
  username       String       @unique
  hashedPassword String
  gamesWon       Int          @default(0)
  games          GamePlayer[]
  guesses        GameGuess[]
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@index(type: BTree, fields: [id])
  @@map("users")
}

model Game {
  id         Int          @id @default(autoincrement())
  numGuesses Int          @default(10)
  secretCode String[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  players    GamePlayer[]
  guesses    GameGuess[]

  @@index(type: BTree, fields: [id])
  @@map("games")
}

model GamePlayer {
  id        Int      @id @default(autoincrement())
  playerId  Int
  gameId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  player    User     @relation(fields: [playerId], references: [id])

  @@unique([playerId, gameId])
  @@index(type: BTree, fields: [id])
  @@map("game_players")
}

model GameGuess {
  id            Int      @id @default(autoincrement())
  playerId      Int?
  gameId        Int
  numCorrectLoc Int
  numCorrectNum Int
  isGameWon     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  game          Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  player        User?    @relation(fields: [playerId], references: [id], onDelete: Cascade)
  
  @@index(type: BTree, fields: [id])
  @@map("game_guesses")
}
